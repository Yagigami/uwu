#ifndef C_AST_DECLARATION_ENUMS_H
#define C_AST_DECLARATION_ENUMS_H

enum DeclarationSpecifierKind {
	DECLARATION_SPECIFIER_NONE = 0,
	DECLARATION_SPECIFIER_STORAGE_CLASS,
	DECLARATION_SPECIFIER_TYPE_SPECIFIER,
	DECLARATION_SPECIFIER_TYPE_QUALIFIER,
	DECLARATION_SPECIFIER_FUNCTION_SPECIFIER,
	DECLARATION_SPECIFIER_NUM,
};

enum StorageClassSpecifier {
	STORAGE_CLASS_NONE = 0,
	STORAGE_CLASS_TYPEDEF,
	STORAGE_CLASS_EXTERN,
	STORAGE_CLASS_STATIC,
	STORAGE_CLASS_AUTO,
	STORAGE_CLASS_REGISTER,
	STORAGE_CLASS_NUM,
};

enum TypeSpecifierKind {
	TYPE_SPECIFIER_NONE = 0,
	TYPE_SPECIFIER_VOID,
	TYPE_SPECIFIER_CHAR,
	TYPE_SPECIFIER_SHORT,
	TYPE_SPECIFIER_INT,
	TYPE_SPECIFIER_LONG,
	TYPE_SPECIFIER_FLOAT,
	TYPE_SPECIFIER_DOUBLE,
	TYPE_SPECIFIER_SIGNED,
	TYPE_SPECIFIER_UNSIGNED,
	TYPE_SPECIFIER_BOOL,
	TYPE_SPECIFIER_COMPLEX,
	TYPE_SPECIFIER_STRUCT,
	TYPE_SPECIFIER_UNION,
	TYPE_SPECIFIER_ENUM,
	TYPE_SPECIFIER_TYPEDEF,
	TYPE_SPECIFIER_NUM,
};

enum TypeQualifierKind {
	QUALIFIER_NONE = 0,
	QUALIFIER_CONST,
	QUALIFIER_RESTRICT,
	QUALIFIER_VOLATILE,
	QUALIFIER_NUM,
};

enum FunctionSpecifier {
	FUNCTION_SPECIFIER_NONE = 0,
	FUNCTION_SPECIFIER_INLINE,
	FUNCTION_SPECIFIER_NUM,
};

enum DeclaratorKind {
	DECLARATOR_NONE = 0,
	DECLARATOR_POINTER,
	DECLARATOR_ARRAY,
	DECLARATOR_VLA_STATIC,
	DECLARATOR_VLA_OMITTED_SIZE,
	DECLARATOR_FUNCTION,
	DECLARATOR_NUM,
};

enum DesignatorKind {
	DESIGNATOR_NONE = 0,
	DESIGNATOR_INDEX,
	DESIGNATOR_FIELD,
	DESIGNATOR_NUM,
};

#endif /* C_AST_DECLARATION_ENUMS_H */
